openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Platform API-Addresses'
servers:
  - url: 'localhost:3000'
paths:
  /addresses:
    get:
      summary: 'Addresses - All'
      description: Retrieves every address that has been seen on the network.
      operationId: getAllAddresses
      tags:
        - Addresses
      parameters:
        - name: blockNumber
          in: query
          description: Filter by addresses first encountered at this block number
          required: true
          schema:
            type: integer
            format: int32
            example: 13715749
        - name: blockNumberGt
          in: query
          description: Filter by addresses first encountered after this block number, not including this blocknumber
          required: true
          schema:
            type: integer
            format: int32
            example: 13715749
        - name: blockNumberGte
          in: query
          description: Filter by addresses first encountered after this block number, including this block number
          required: true
          schema:
            type: integer
            format: int32
            example: 13715749
        - name: blockNumberLt
          in: query
          description: Filter by addresses first encountered before this block number, not including this block number
          required: true
          schema:
            type: integer
            format: int32
            example: 13715749
        - name: blockNumberLte
          in: query
          description: Filter by addresses first encountered before this block number, including this block number
          required: true
          schema:
            type: integer
            format: int32
            example: 13715749
        - name: hash
          in: query
          description: Filter by a specific address
          required: true
          schema:
            type: string
            example: "0xc60d5dc69e69a977d4c666c0e7cebe1ad4eae01b8d6804407dc5a5d8d5d195bb"
        - name: startDate
          in: query
          description: Filter by addresses first encountered after this date
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Filter by addresses first encountered after before date
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: transactionHash
          in: query
          description: Filter by addresses first encountered at this transaction hash
          required: true
          schema:
            type: string
            example: "0xd98b913ab59398a9a643e25e4143a8579f928257ec2e8983c4ecc471f87f6837"
        - name: type
          in: query
          description: Filter by addresses of the specified type (EOA or CONTRACT)
          required: true
          schema:
            type: string
            example: CONTRACT
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: size
          in: query
          description: The number of results to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'An object with all addresses seen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/All_addresses'
  /addresses/{hash}/account-balances/latest:
    get:
      summary: 'Balances - Balance Latest'
      description: Retrieves the current account balance for the specified address.
      operationId: getLatestBalance
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: address to retrieve the account balance for
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'An object with current account balance'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance_latest'
  /addresses/{hash}/account-balances/historical:
    get:
      summary: 'Balances - Balance Historical '
      description: Retrieves the historical (time series) account balances for the specified address.
      operationId: getHistoricalBalance
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address to retrieve the account balances for
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: blockNumber
          in: query
          description: FIlter by account balances at block number
          required: true
          schema:
            type: integer
            format: int32
            example: 13715749
        - name: startDate
          in: query
          description: FIlter by account balances which happened after this date
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: FIlter by account balances which happened before this date
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: value
          in: query
          description: FIlter by account balances where the balance is equal to this value
          required: true
          schema:
            type: integer
            format: int32
            example: 207.18797038
        - name: valueGt
          in: query
          description: FIlter by account balances where the balance is greater than this value
          required: true
          schema:
            type: integer
            format: int32
            example: 201.18797035
        - name: valueGte
          in: query
          description: FIlter by account balances where the balance is greater than or equal to this value
          required: true
          schema:
            type: integer
            format: int32
            example: 101.18797034
        - name: valueLt
          in: query
          description: FIlter by account balances where the balance is less than this value
          required: true
          schema:
            type: integer
            format: int32
            example: 110.18797030
        - name: valueLte
          in: query
          description: FIlter by account balances where the balance is less than or equal to this value
          required: true
          schema:
            type: integer
            format: int32
            example: 10.18797050
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: size
          in: query
          description: The number of results to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: timeFormat
          in: query
          description:  Time format of the timestamps in the return payload. ([Defaults] milliseconds | ms* | iso | iso8611 | hr | human_readable)
          required: false
          schema:
            type: string
            example: iso
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'An object with historical account balance'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance_historical'
  /addresses/{hash}/balances:
    get:
      summary: 'Balances - Balance & Tokens Latest'
      description: Retrieves the latest account and token balances for the specified address.
      operationId: getTokensAndBalance
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address for which to retrieve balances.
          required: true
          schema:
            type: string
            example: "0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be"
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: timeFormat
          in: query
          description:  Time format of the timestamps in the return payload. ([Defaults] milliseconds | ms* | iso | iso8611 | hr | human_readable)
          required: false
          schema:
            type: string
            example: iso
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'The object containing detailed data about the address s balances.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance_tokens'
  /addresses/balances:
    get:
      summary: 'Balances Batch'
      description: Retrieves the latest account and token balances for the specified addresses.
      operationId: getBalanceBatch
      tags:
        - Addresses
      parameters:
        - name: addresses
          in: query
          description: A comma separated list of addresses. NOTE  Max 50 addresses per request!
          required: true
          schema:
            type: string
            example: 0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be,0x06012c8cf97bead5deae237070f9587f8e7a266d
        - name: blockNumber
          in: query
          description: Get balances for addresses at a specific block height. (NOTE does not support token holdings for Ethereum at this time.)
          required: true
          schema:
            type: string
            example: "600000"
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: timeFormat
          in: query
          description:  Time format of the timestamps in the return payload. ([Defaults] milliseconds | ms* | iso | iso8611 | hr | human_readable)
          required: false
          schema:
            type: string
            example: iso
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'The object containing detailed data about the address s balances.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance_batch'
  /addresses/{hash}/functions:
    get:
      summary: 'Internal Messages'
      description: Retrieves internal messages where this address is either the originator or a recipient.
      operationId: getFunctions
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address of the account
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: blockNumber
          in: query
          description: Filter by internal messages contained within this block number
          required: true
          schema:
            type: integer
            format: int64
            example: 7280444
        - name: direction
          in: query
          description: The order in which to return the results (ascending or descending). By default, records are returned in descending order, so the most recent records are returned first.
          required: true
          schema:
            type: string
            example: descending
        - name: from
          in: query
          description: Filter by internal messages for this "from" address
          required: true
          schema:
            type: string
            example: "0x09191d18729da57a83a9afc8ace0c8d7d104e118"
        - name: to
          in: query
          description: Filter by internal messages for this "to" address
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: transactionHash
          in: query
          description: Filter by internal messages for this transaction
          required: true
          schema:
            type: string
            example: "0x63e10d5ce03fce3116a19a4d8c1869fd53630f8ff9d8fb16790200af965ba0c2"
        - name: startDate
          in: query
          description: Filter by internal messages which happened after this date
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Filter by internal messages which happened before this date
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: validationMethod
          in: query
          description: The validation method to be added to the response, none, basic, full. Default, none
          required: true
          schema:
            type: string
            example: basic
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: size
          in: query
          description: Number of records per page
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'Array of transaction objects.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_functions'
  /addresses/{hash}/logs:
    get:
      summary: 'Logs'
      description: Retrieves the logs for the transactions where this address is either the originator or a recipient.
      operationId: getLogs
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address to retrieve logs for
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: blockNumber
          in: query
          description: Filter by logs contained in this block number
          required: true
          schema:
            type: integer
            format: int32
            example: 7280571
        - name: transactionHash
          in: query
          description: Filter by logs from a specific transaction hash
          required: true
          schema:
            type: string
            example: "0x3c0abea77f9324b565696e51a6e7109a10fe320e985963b869105ce6e8db20f7"
        - name: startDate
          in: query
          description: Filter by logs which happened after this date
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Filter by logs which happened before this date
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: size
          in: query
          description: Number of records per page
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'Object containig logs of specific address'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_logs'
  /addresses/{hash}/converter:
    get:
      summary: 'Converter'
      description: Converts the specified address in the Bitcoin Cash & Legacy formats.
      operationId: getAddress
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address to convert.
          required: true
          schema:
            type: string
            example: pp8xkgfvyjhkdkta0awjx7ud7qmnwd0rvy5vdtxqnv
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: bitcoin-mainnet
      responses:
        '200':
          description: 'Object containing address with new format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_converter'
  /addresses/{hash}/information:
    get:
      summary: 'Information'
      description: Retrieves information about the specified address, network(s) and blockchain(s) this address exist within.
      operationId: getInformation
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address to retrieve information for.
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: bitcoin-mainnet
      responses:
        '200':
          description: 'Object with specific address information'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_information'
  /addresses/{hash}/metadata:
    get:
      summary: 'Metadata'
      description: Retrieves statistics about the specified address, balances, holdings, etc.
      operationId: getMetadata
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address to retrieve statistics formats.
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: timeFormat
          in: query
          description:  Time format of the timestamps in the return payload. ([Defaults] milliseconds | ms* | iso | iso8611 | hr | human_readable)
          required: false
          schema:
            type: string
            example: iso
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'Array with statistics about the specified address'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_statistics'
  /addresses/extended/{address}:
    get:
      summary: 'Extended Public Key'
      description: Generates derived addresses based an x,y,z public address and a path
      operationId: getKey
      tags:
        - Addresses
      parameters:
        - name: address
          in: path
          description: The X, Y or Z public address used to generate derived addresses.
          required: true
          schema:
            type: string
            example: ypub6XTWVFLfqkFYarn9NArqtBLziffJttqf1Utaur3sTbTGtgfNaTzkGcRpFgiiieBjQ6rV1rJ7iJ9r9oXGpPXZpkq71yfss2mrKLaauxhjXD4
        - name: path
          in: query
          description: The path into the HD addresses generated from the extended public key.
          required: true
          schema:
            type: string
            example: m/0/0/0
        - name: type
          in: query
          description: Which type of extended public key to parse, this is not needed unless the address is somehow encoded differently.
          required: true
          schema:
            type: string
            example: ypub
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: size
          in: query
          description: Number of records per page
          required: true
          schema:
            type: integer
            format: int32
            example: 100
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: bitcoin-mainnet
      responses:
        '200':
          description: 'Array with statistics about the specified address'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_extended'
  /addresses/{address}/pending-transactions:
    get:
      summary: 'Mempool'
      description: Retrieves mempool transactions the specified address is involved in.
      operationId: getMempool
      tags:
        - Addresses
      parameters:
        - name: address
          in: path
          description: The address of the account for which to retrieve transactions.
          required: true
          schema:
            type: string
            example: 1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY
        - name: from
          in: query
          description: Filter by transactions for this "from" address.
          required: true
          schema:
            type: string
            example: 1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY
        - name: to
          in: query
          description: Filter by transactions for this "to" address
          required: true
          schema:
            type: string
            example: 1KGG9kvV5zXiqyQAMfY32sGt9eFLMmgpgX,1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY
        - name: startDate
          in: query
          description: Filter by transactions which happened after this date.
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Filter by transactions which happened before this date.
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: size
          in: query
          description: Number of records per page
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: bitcoin-mainnet
      responses:
        '200':
          description: 'Object containing transaction data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_mempool'
  /addresses/metrics/latest:
    get:
      summary: 'Metrics Latest'
      description: Get metrics for all addresses that have exist publicly for a given blockchain.
      operationId: getMetrics
      tags:
        - Addresses
      parameters:
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'Object containing latest metrics'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_latest'
  /addresses/{hash}/adoption:
    get:
      summary: 'Adoption'
      description: Retrieves the historical adoption for the specified address.
      operationId: getAdoption
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address for which to receive adoption statistics.
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: timeFrame
          in: query
          description: The time frame to return the historical data(by day (1d, 2d, ..., all), by hour (1h, 2h, ..., 72h) or by minute )
          required: true
          schema:
            type: string
            example: 30d
        - name: timePeriod
          in: query
          description: The time period (in minutes) to aggregate the historical data.
          required: true
          schema:
            type: string
            example: "5000000"
        - name: timeFormat
          in: query
          description:  Time format of the timestamps in the return payload. ([Defaults] milliseconds | ms* | iso | iso8611 | hr | human_readable)
          required: false
          schema:
            type: string
            example: iso
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'The historical address adoption data.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_adoptions'
  /addresses/{hash}/usage:
    get:
      summary: 'Usage'
      description: Retrieves the historical usage for the specified address.
      operationId: getUsage
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address for which to receive usage statistics.
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: timeFrame
          in: query
          description: The time frame to return the historical data(by day (1d, 2d, ..., all), by hour (1h, 2h, ..., 72h) or by minute )
          required: true
          schema:
            type: string
            example: 30d
        - name: timePeriod
          in: query
          description: The time period (in minutes) to aggregate the historical data.
          required: true
          schema:
            type: string
            example: "5000000"
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: timeFormat
          in: query
          description:  Time format of the timestamps in the return payload. ([Defaults] milliseconds | ms* | iso | iso8611 | hr | human_readable)
          required: false
          schema:
            type: string
            example: iso
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'The historical address usage data.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_usage'
  /addresses/{hash}/token-balances/latest:
    get:
      summary: 'Tokens - Balances Latest'
      description: Retrieves the tokens this address is holding.
      operationId: getLatestBalance
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: address to retrieve tokens for.
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: direction
          in: query
          description: The direction by which to sort the tokens (ascending or descending).
          required: true
          schema:
            type: string
            example: descending
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results.
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information (usd or eth.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: EUR
        - name: sortType
          in: query
          description: The metric by which to rank the tokens (amount, name, symbol).
          required: true
          schema:
            type: string
            example: amount
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: string
            example: "0"
        - name: size
          in: query
          description: The number of records per page.
          required: true
          schema:
            type: string
            example: "2"
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'An object containing details about a token owned by the specified address.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_balances'
  /addresses/{hash}/token-balances/historical:
    get:
      summary: 'Tokens - Balances Historical'
      description: Retrieves the historical (time series) token balances for the specified address.
      operationId: getHistoricalBalance
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: address to retrieve tokens for.
          required: true
          schema:
            type: string
            example: "0xff3d7ee787ce86641264920baadff8daab735a2a"
        - name: amount
          in: query
          description: Filters by token balances which value is equal to this amount
          required: true
          schema:
            type: integer
            format: int32
            example: 1341
        - name: amountGt
          in: query
          description: Filter by token balances which value is greater than this amount
          required: true
          schema:
            type: integer
            format: int32
            example: 2348
        - name: amountGte
          in: query
          description: Filter by token balances which value is greater than or equal to this amount
          required: true
          schema:
            type: integer
            format: int32
            example: 7941
        - name: amountLt
          in: query
          description: Filter by token balances which value is less than this amount
          required: true
          schema:
            type: integer
            format: int32
            example: 2580
        - name: amountLte
          in: query
          description: Filter by token balances which value is less than or equal to this amount
          required: true
          schema:
            type: integer
            format: int32
            example: 3560
        - name: startDate
          in: query
          description: Get balance after a start date (Requires endDate)
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Get balances before the specified date (Requires startDate)
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: tokenAddress
          in: query
          description: Filter by the speficied token address.
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 0
        - name: size
          in: query
          description: The number of records per page.
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: format
          in: query
          description: Format of the return payload. [Defaults] csv | json*
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'An array containing details about a token owned by the specified address.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_historical'
  /addresses/{hash}/token-transfers:
    get:
      summary: 'Tokens - Transfers'
      description: Retrieves all token transfers involving the specified address.
      operationId: getTransfers
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: The address to retrieve the token transfers for
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: amount
          in: query
          description: Filter by token transfers which value is equal to this amount.
          required: true
          schema:
            type: integer
            format: int32
            example: 20000000000000000000
        - name: amountGt
          in: query
          description: Filter by token transfers which value is greater than this amount.
          required: true
          schema:
            type: integer
            format: int32
            example: 20000000000000000000
        - name: amountGte
          in: query
          description: Filter by token transfers which value is greater than or equal to this amount.
          required: true
          schema:
            type: integer
            format: int32
            example: 20000000000000000000
        - name: amountLt
          in: query
          description: Filter by token transfers which value is less than this amount.
          required: true
          schema:
            type: integer
            format: int32
            example: 20000000000000000000
        - name: amountLte
          in: query
          description: Filter by token transfers which value is less than or equal to this amount
          required: true
          schema:
            type: integer
            format: int32
            example: 20000000000000000000
        - name: blockNumber
          in: query
          description: Filter by token transfers with this block number.
          required: true
          schema:
            type: integer
            format: int32
            example: 7252428
        - name: startDate
          in: query
          description: Filter by token transfers which happened after this date.
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Filter by token transfers which happened before this date
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: tokenAddress
          in: query
          description: Filter by token transfers for this token.
          required: true
          schema:
            type: string
            example: "0x26fb86579e371c7aedc461b2ddef0a8628c93d3b"
        - name: transactionHash
          in: query
          description: Filter by token transfers for this transaction hash.
          required: true
          schema:
            type: string
            example: "0x281d6478dee6d20da7e9293991cc68085532a915760f23d77ffa9923edb523de"
        - name: direction
          in: query
          description: The order in which to return the results (ascending or descending).
          required: true
          schema:
            type: string
            example: descending
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: size
          in: query
          description: The number of records per page.
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: validationMethod
          in: query
          description: The validation method to be added to the response, none, basic, full. Default, none
          required: true
          schema:
            type: string
            example: basic
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results.
          required: true
          schema:
            type: boolean
            example: true
        - name: currency
          in: query
          description: The currency of the price information.(Options usd, btc.) Only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: format
          in: query
          description: Format of the return payload.([Defaults] csv | json*)
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description:  List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'Array of token transfer objects.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_transfers'
  /addresses/{hash}/transactions:
    get:
      summary: 'Transactions'
      description: Retrieves all token transfers involving the specified address.
      operationId: getTransfers
      tags:
        - Addresses
      parameters:
        - name: hash
          in: path
          description: address to retrieve transactions for
          required: true
          schema:
            type: string
            example: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        - name: blockNumber
          in: query
          description: Filter by transactions for this block number.
          required: true
          schema:
            type: integer
            format: int32
            example: 5703560
        - name: from
          in: query
          description: Filter by transactions for this "from" address.
          required: true
          schema:
            type: string
            example: "0xce9af648a831ddf0cd6d05e3fe5787b3c7987246"
        - name: to
          in: query
          description: Filter by transactions for this "to" address
          required: true
          schema:
            type: string
            example: "0xf85feea2fdd81d51177f6b8f35f0e6734ce45f5"
        - name: includeFunctions
          in: query
          description: Indicates whether or not to include functions (aka internal messages) information for each transaction, if available (false|true).
          required: true
          schema:
            type: boolean
            example: true
        - name: includeLogs
          in: query
          description: Indicates whether or not to include log information for each transaction, if available (false|true).
          required: true
          schema:
            type: boolean
            example: true
        - name: decodeTransactions
          in: query
          description: Decodes transactions input via known ABIs.
          required: true
          schema:
            type: boolean
            example: false
        - name: includeTokenTransfers
          in: query
          description: Indicates whether or not to include token transfers information for each transaction, if available (false|true).
          required: true
          schema:
            type: boolean
            example: true
        - name: includePrice
          in: query
          description: Indicates whether or not to include price data with the results. (Options true, false.)
          required: true
          schema:
            type: boolean
            example: true
        - name: startDate
          in: query
          description: Filter by transactions which happened after this date.
          required: true
          schema:
            type: string
            example: "2021-01-01 12:00:00"
        - name: endDate
          in: query
          description: Filter by transactions which happened before this date.
          required: true
          schema:
            type: string
            example: "2021-03-01 12:00:00"
        - name: validationMethod
          in: query
          description: The validation method to be added to the response ( none, basic, full. (Default none))
          required: true
          schema:
            type: string
            example: basic
        - name: currency
          in: query
          description: The currency of the price information (usd or btc.) - only used in conjunction with includePrice.
          required: true
          schema:
            type: string
            example: USD
        - name: direction
          in: query
          description: The order in which to return the results (ascending or descending). By default, records are returned in descending order, so the most recent records are returned first.
          required: true
          schema:
            type: string
            example: descending
        - name: page
          in: query
          description: The page number to return.
          required: true
          schema:
            type: integer
            format: int32
            example: 2
        - name: size
          in: query
          description: The number of records per page.
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - name: format
          in: query
          description: Format of the return payload. (Defaults csv | json*)
          required: false
          schema:
            type: string
            example: csv
        - name: fields
          in: query
          description: List of fields to include in the return payload - can only be used in combination with option format=csv.
          required: false
          schema:
            type: string
            example: timestamp
        - name: blockchain-id
          in: header
          description: ID of the blockchain
          required: true
          schema:
            type: string
            example: ethereum-mainnet
      responses:
        '200':
          description: 'An array containing objects containing data pertaining to the specified transaction.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses_transactions'
components:
  schemas:
    All_addresses:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "totalRecords": 50721693,
        "records": [
      {
        "firstBlockNumber": "5703544",
        "creator": null,
        "type": "EOA",
        "firstTransactionHash": "0x457089d994dc565666226758557dc35c9fb05bf89038bb894de86da2a7d35d77",
        "hash": "0xce9af648a831ddf0cd6d05e3fe5787b3c7987246",
        "timestamp": 1527697819000000,
        "blockchainId": "1c9c969065fcd1cf"
      },
      {
        "firstBlockNumber": "5703544",
        "creator": null,
        "type": "EOA",
        "firstTransactionHash": "0xf4311c1fed2e01a6e1c75ba251353a1e61590513a32fe4da524bc43a9024a326",
        "hash": "0x8382a98b7566d6e4139fa9ffd3a9f1fa826c5093",
        "timestamp": 1527697819000000,
        "blockchainId": "1c9c969065fcd1cf"
      }
      ]
      }
    Balance_latest:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
      "address": {
      "address": "0x06012c8cf97bead5deae237070f9587f8e7a266d"
       },
       "blockchainId": "1c9c969065fcd1cf",
       "blockNumber": "7817499",
       "timestamp": 1558635166000,
       "timestampNanoseconds": 0,
       "value": "59717752721124107170"
       }
    Balance_historical:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
       "data": [
      [
        "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "7446815",
        1553638828000,
        0,
        "65183168478133965282"
      ],
      [
        "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "7446812",
        1553638801000,
        0,
        "65191168478133965282"
      ]
      ],
      "metadata": {
      "columns": [
        "address",
        "blockNumber",
        "timestamp",
        "timestampNanoseconds",
        "value"
      ],
      "totalRecords": 1118325
      }
      }
    Balance_tokens:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
      "0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be": {
      "balance": "5.4777658867801856271744e+22", # The current balance of the account.
      "balanceIn": "5.5265160095722306803399618e+25", # Total ETH received by the address
      "balanceOut": "5.5210382436854504947127874e+25", # Total ETH sent by the address.
      "tokens": [
        {
          "address": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2", # The token contract address.
          "decimals": 18, # The number of significant digits, per smart contract definition.
          "milliseconds": 1559665587000,
          "name": "Maker",
          "symbol": "MKR",
          "amount": "187720361680000000000", # The total amount of of tokens held by the address.
          "timestamp": 1559665587000, # The time when the account balance was last changed.
          "price": {
            "amount": {
              "currency": "usd",
              "quote": "680.815866247",
              "total": "127803.0006493693442149600000000"
            }
          }
        },
        {...},
        ...
      ]
      }
      }
    Balance_batch:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "1MUz4VMYui5qY1mxUiG8BQ1Luv6tqkvaiL": {
            "balance": "22855627272",
            "price": {
                "balance": {
                    "currency": "usd",
                    "quote": "57218.13564119",
                    "total": "13077563.81413740"
                }
            }
        },
        "1Kr6QSydW9bFQG1mXiPNNu6WpJGmUa9i1g": {
            "balance": "150140633787",
            "price": {
                "balance": {
                    "currency": "usd",
                    "quote": "57218.13564119",
                    "total": "85907671.49278540"
                }
            }
        }
       }
    Addresses_functions:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
       "totalRecords": 14674321,
       "records": [
      {
        "blockNumber": "7280444",
        "depth": 0,
        "error": "",
        "from": "0x09191d18729da57a83a9afc8ace0c8d7d104e118",
        "initialGas": "578408",
        "input": "0x88c2a0bf0000000000000000000000000000000000000000000000000000000000156aba",
        "messageIndex": 2,
        "opcode": "CALL",
        "returnValue": "0x000000000000000000000000000000000000000000000000000000000015b35e",
        "timestamp": 1551391491000,
        "timestampNanoseconds": null,
        "to": [
          "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        ],
        "transactionHash": "0x63e10d5ce03fce3116a19a4d8c1869fd53630f8ff9d8fb16790200af965ba0c2",
        "value": "0",
        "optionalProperties": null,
        "blockchainId": "1c9c969065fcd1cf"
      }
     ]
     }
    Address_logs:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "totalRecords": 6448870,
        "records": [
      {
        "removed": false,
        "logIndex": "230",
        "transactionIndex": "62",
        "transactionHash": "0x3c0abea77f9324b565696e51a6e7109a10fe320e985963b869105ce6e8db20f7",
        "blockHash": "0xa3f99da4a3871dbc8778a1fcb3a715ddbee89bfe3762eb6d1b624d4312e37757",
        "blockNumber": "7280571",
        "address": "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "data": [
          "00000000000000000000000012b353d1a2842d2272ab5a18c6814d69f4296873",
          "0000000000000000000000000000000000000000000000000000000000159353",
          "000000000000000000000000000000000000000000000000000000000015ab30",
          "00000000000000000000000000000000000000000000000000000000006f18ab"
        ],
        "dataSize": 258,
        "timestamp": 1551393570000,
        "timestampNanoseconds": 0,
        "topics": [
          "0x241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b80"
        ],
        "blockchainId": "1c9c969065fcd1cf"
      }
      ]
      }
    Addresses_converter:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
       "isCashAddress"   : false,
       "isLegacyAddress" : true,
       "cashAddress"     : "bitcoincash:pp8xkgfvyjhkdkta0awjx7ud7qmnwd0rvy5vdtxqnv",
       "legacyAddress"   : "38qexzy1jDZ49RgPAeaDqVdys6xhyZk1N2"
       }
    Addresses_information:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "balance": "69498477186533922505",
        "balanceIn": "2.7938614849190848921864e+22",
        "balanceOut": "2.7869116372004314999359e+22",
        "addressType": "contract",
        "contractTypes": [
            "ERC721"
        ],
        "decimals": "0",
        "name": "CryptoKitties",
        "numHolders": "73880",
        "numTokens": "1512179",
        "numTransfers": "1557375",
        "symbol": "CK",
        "totalSupply": "1512179.0000000000000000",
        "totalValueUSD": null,
        "unitValueUSD": null
        }
    Address_statistics:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: array
          items:
            type: object
          example: [
           {
            "firstSeen": "2017-11-23T05:41:19.000Z",
            "type": "contract",
            "contractTypes": [
                "ERC721"
            ],
            "probability": 1,
            "network": {
                "blockchainId": "1c9c969065fcd1cf",
                "link": "https://amberdata.io/addresses/0x06012c8cf97bead5deae237070f9587f8e7a266d"
            }
            },
            {
            "firstSeen": "2017-12-05T06:56:08.000Z",
            "type": "address",
            "contractTypes": [
                "Unknown"
            ],
            "probability": 0,
            "network": {
                "blockchainId": "1b3f7a72b3e99c13",
                "link": "https://amberdata.io/addresses/0x06012c8cf97bead5deae237070f9587f8e7a266d"
            }
            }
            ]
    Addresses_extended:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "metadata": {
            "type": "ypub",
            "rootPath": "m/0/0/0",
            "start": 0,
            "end": 100
            },
           "data": [
            {
                "path": "m/0/0/0",
                "address": "39At1aD71SRwr9FbdUMYDdTXyaxAh2vemG"
            },
            {
                "path": "m/0/0/1",
                "address": "35HcnGKMqs1MQBdaJbs6h8XypzNFS8f6i9"
            },
            {
                "path": "m/0/0/2",
                "address": "3BN8amutYVRo3F6EvrPjERDB8zZGsuEzBL"
            },
            ...
        ]
        }
    Addresses_mempool:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "records": [{
        "from": {
          "address": "1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"
        },
        "gas": null,
        "hash": "6cb3aae7132f535f7d8aaec9a224aa3a97b241bcf4d8160fb33830619b68a909",
        "timestamp": "2020-01-09T10:29:43.151Z",
        "to": [{
          "address": "1KGG9kvV5zXiqyQAMfY32sGt9eFLMmgpgX,1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"
        }],
        "value": "1249996359",
        "inputs": [{
          "addresses": [
            "1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"
          ],
          "index": 0,
          "meta": "{}",
          "requiredSignatures": 1,
          "scriptAsm": "3045022100f1aeb3c344f6d3b1fb9f4b48ad6efab20a2330931c5457efc217e814d005ee0202205063945dbe620b2e6e2bf82606af0fe35f8e34281cdf46295b8338f9119cd420[ALL] 04e7e8eeb1d060e2ae611e2e6253b7948d7c02b7ea7c2dce09d939225a5c39d86553b07acf5073b1dc1e432cdf574d587b2800e0c3d4e43fcb3a1f84bfdf602a1e",
          "scriptHex": "483045022100f1aeb3c344f6d3b1fb9f4b48ad6efab20a2330931c5457efc217e814d005ee0202205063945dbe620b2e6e2bf82606af0fe35f8e34281cdf46295b8338f9119cd420014104e7e8eeb1d060e2ae611e2e6253b7948d7c02b7ea7c2dce09d939225a5c39d86553b07acf5073b1dc1e432cdf574d587b2800e0c3d4e43fcb3a1f84bfdf602a1e",
          "sequence": 4294967294,
          "spentOutputIndex": 0,
          "spentTransactionHash": "41b11259c1f78d0b8528ccae9878fe1f596b70ecdacdeb3e4ba143510fd7dae9",
          "timestamp": "2020-01-09T10:29:43.16",
          "timestampNanoseconds": 0,
          "transactionHash": "6cb3aae7132f535f7d8aaec9a224aa3a97b241bcf4d8160fb33830619b68a909",
          "type": "pubkeyhash",
          "value": 1250000000
        }],
        "outputs": [{
            "addresses": [
              "1KGG9kvV5zXiqyQAMfY32sGt9eFLMmgpgX"
            ],
            "index": 0,
            "meta": null,
            "requiredSignatures": 1,
            "scriptAsm": "OP_DUP OP_HASH160 c85526a428126c00ad071b56341a5a553a5e96a3 OP_EQUALVERIFY OP_CHECKSIG",
            "scriptHex": "76a914c85526a428126c00ad071b56341a5a553a5e96a388ac",
            "timestamp": "2020-01-09T10:29:43.162",
            "timestampNanoseconds": 0,
            "transactionHash": "6cb3aae7132f535f7d8aaec9a224aa3a97b241bcf4d8160fb33830619b68a909",
            "type": "pubkeyhash",
            "value": 1000000000
          },
          {
            "addresses": [
              "1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"
            ],
            "index": 1,
            "meta": null,
            "requiredSignatures": 1,
            "scriptAsm": "OP_DUP OP_HASH160 c825a1ecf2a6830c4401620c3a16f1995057c2ab OP_EQUALVERIFY OP_CHECKSIG",
            "scriptHex": "76a914c825a1ecf2a6830c4401620c3a16f1995057c2ab88ac",
            "timestamp": "2020-01-09T10:29:43.162",
            "timestampNanoseconds": 0,
            "transactionHash": "6cb3aae7132f535f7d8aaec9a224aa3a97b241bcf4d8160fb33830619b68a909",
            "type": "pubkeyhash",
            "value": 249996359
          }
        ],
        "price": {
          "value": {
            "currency": "usd",
            "quote": "7917.3490000000000000",
            "total": "98966.5742293229"
          }
        }
      },
      ...
      ]
      }
    Addresses_latest:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "activeTotal": "281181", # The total number of addresses for the specified time window
        "activeAverage": "11715.875000000000" # The average number of addresses for the specified time window
        }
    Addresses_adoptions:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
      "metadata": { # The metadata associated with the address adoption data.
      "columns": [
        "timestamp", # The timestamp associated with this record.
        "adoption"
      ],
      "startDate": 1551139200000,
      "endDate": 1552003200000
      },
      "data": [ # The historical address adoption data.
      [
        1551139200000,
        "30"
      ],
      ...
      ]
      }
    Addresses_usage:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
      "metadata": {
      "columns": [
        "timestamp",
        "usage"
      ],
      "startDate": 1552083600000,
      "endDate": 1552087200000
      },
      "data": [
      [
        1552083600000,
        "28"
      ],
      ...
      ]
      }
    Addresses_balances:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
     "records": [{
        "address": "0xfa6f7881e52fdf912c4a285d78a3141b089ce859",
        "holder": "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "amount": "100000100000000000000000000",
        "decimals": "18",
        "name": "Avocado",
        "symbol": "AVO",
        "isERC20": true,
        "isERC721": false,
        "isERC777": false,
        "isERC884": false,
        "isERC998": false
      },
      {
        "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
        "holder": "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "amount": "0",
        "decimals": "18",
        "name": "Wrapped Ether",
        "symbol": "WETH",
        "isERC20": true,
        "isERC721": false,
        "isERC777": false,
        "isERC884": false,
        "isERC998": false,
        "price": {
          "amount": {
            "currency": "usd",
            "quote": "233.901383764",
            "total": "0.000000000000000000000000000000000000000000000"
          }
        }
      },
      ],
      "totalRecords": "82"
      }
    Addresses_historical:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "totalRecords": 804219,
        "records": [
      {
        "blockchainId": "1c9c969065fcd1cf",
        "amount": "1341",
        "address": "0x06012c8cf97bead5deae237070f9587f8e7a266d",
        "holder": "0xbae25a69a6eb7341ee834be7635e247e22a1e57a",
        "decimals": "0",
        "name": "CryptoKitties",
        "symbol": "CK",
        "isERC20": false,
        "isERC721": true,
        "isERC777": false,
        "isERC884": false,
        "isERC998": false
      }
      ]
      }
    Addresses_transfers:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "totalRecords": 69918,
        "records": [
      {
        "transactionHash": "0x281d6478dee6d20da7e9293991cc68085532a915760f23d77ffa9923edb523de",
        "blockHash": "0x5b24ad74b3b6b7adb83e0ba4996726db5b91392a925bb54462c1d9833e921a4f",
        "blockNumber": "7252428",
        "tokenAddress": "0x26fb86579e371c7aedc461b2ddef0a8628c93d3b",
        "amount": "20000000000000000000",
        "timestamp": 1550825454000,
        "timestampNanoseconds": 0,
        "logIndex": 163,
        "blockchainId": "1c9c969065fcd1cf",
        "to": [
          "0x06012c8cf97bead5deae237070f9587f8e7a266d"
        ],
        "from": "0x41efb7f2fa8e27a5c089082e8a61f15f748f7e0b",
        "decimals": "18",
        "name": "BORA",
        "symbol": "BORA",
        "isERC20": true,
        "isERC721": false,
        "isERC777": false,
        "isERC884": false,
        "isERC998": false
      }
      ]
      }
    Addresses_transactions:
      type: object
      properties:
        "status":
          type: integer
          format: int64
          example: 200
        "title":
          type: string
          example: "OK"
        "description":
          type: string
          example: "Successful request"
        "payload":
          type: object
          example: {
        "records": [
      {
        "blockchainId": "1c9c969065fcd1cf",
        "blockNumber": "5703560",
        "confirmations": "2280417",
        "contractAddress": "null",
        "cumulativeGasUsed": "6348961",
        "fee": "563675000000000",
        "from": {
          "address": "0xce9af648a831ddf0cd6d05e3fe5787b3c7987246"
        },
        "gasLimit": "53000",
        "gasPrice": "25000000000",
        "gasUsed": "22547",
        "hash": "0xd0c6d02f93f77996823d76a5e012d0108192b1d9f9bce7f4297c3247dc5e753b",
        "index": 121,
        "input": "0xa9059cbb0...",
        "logsBloom": "0x000000...",
        "maxFeePerGas": 1000000028,
        "maxPriorityFeePerGas": 1000000000,
        "nonce": "504404",
        "publicKey": "null",
        "r": "0x7dd79c36a2c7b488d055222d07eff80d9e0fd6983e21a19d9e0770142e5d8350",
        "raw": "null",
        "root": "null",
        "s": "0x426e3fcd93bf5bd20878a9f6ffca9f0f8875e988f3ad0fa6caf95493f592a617",
        "status": "0x1",
        "timestamp": "2018-05-30T16:35:27.000Z",
        "to": [
          {
            "icon": "https://cdn.amberdata.io/images/tokens/0xf85feea2fdd81d51177f6b8f35f0e6734ce45f5f.png",
            "address": "0xf85feea2fdd81d51177f6b8f35f0e6734ce45f5f"
          }
        ],
        "type": 2,
        "v": "27",
        "value": "0",
        "statusResult": {
          "code": "0x1",
          "confirmed": true,
          "success": true,
          "name": "successful"
        }
      }
      ]
      }